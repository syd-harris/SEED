#this will likely need to be edited before submission; probably need to change the timing

#Set address
ser = serial.Serial('/dev/ttyACM0', 115200, timeout=0.01)

#Wait for connection to complete
time.sleep(3)

def ReadfromArduino():
    if(ser.in_waiting > 0):
        try:
            line = ser.readline().decode('utf-8').rstrip()
            lcd_string = ("serial output: \n" + line)
            lcd.message = lcd_string
        except:
            lcd.message = "Communication\nError"
            time.sleep(5)
            lcd.clear()

#Write to Arduino
 ser.write(struct.pack('>B',#send string of variables here ex: "23,54,89"))


#Arduino Code
   if(Serial.available()){
  String rxString = "";
  String strArr[2]; //Set the size of the array to equal the number of values you will be receiveing.
  //Keep looping until there is something in the buffer.
  while (Serial.available()) {
    //Delay to allow byte to arrive in input buffer.
    delay(2);
    //Read a single character from the buffer.
    char ch = Serial.read();
    //Append that single character to a string.
    rxString+= ch;
  }
  int stringStart = 0;
  int arrayIndex = 0;
  for (int i=0; i < rxString.length(); i++){
    //Get character and check if it's our "special" character.
    if(rxString.charAt(i) == ','){
      //Clear previous values from array.
      strArr[arrayIndex] = "";
      //Save substring into array.
      strArr[arrayIndex] = rxString.substring(stringStart, i);
      //Set new string starting point.
      stringStart = (i+1);
      arrayIndex++;
    }
  }
  //Put values from the array into the variables.
  String value1 = strArr[0];
  String value2 = strArr[1];
  //Convert string to int if you need it.
  int intValue1 = value1.toInt();
}
